|main
MAX10_CLK1_50 => Clock.IN3
SW[0] => Resetn.IN3
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << echo_ticks:ET0.timeout
LEDR[2] << echo_ticks:ET0.busy
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
GPIO[0] <> <UNC>
GPIO[1] <> <UNC>
GPIO[2] <> <UNC>
GPIO[3] <> <UNC>
GPIO[4] <> <UNC>
GPIO[5] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> <UNC>
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>
ARDUINO_IO[0] <> trigger_generator:TG0.cycle_out
ARDUINO_IO[1] <> <UNC>
ARDUINO_IO[2] <> <UNC>
ARDUINO_IO[3] <> <UNC>
ARDUINO_IO[4] <> <UNC>
ARDUINO_IO[5] <> <UNC>
ARDUINO_IO[6] <> <UNC>
ARDUINO_IO[7] <> <UNC>
ARDUINO_IO[8] <> <UNC>
ARDUINO_IO[9] <> <UNC>
ARDUINO_IO[10] <> echo_ticks:ET0.echo_in
ARDUINO_IO[11] <> trigger_generator:TG0.trig_out
ARDUINO_IO[12] <> <UNC>
ARDUINO_IO[13] <> <UNC>
ARDUINO_IO[14] <> <UNC>
ARDUINO_IO[15] <> <UNC>
HEX0[0] << show_ticks_cm_3hex:ST0.HEX0
HEX0[1] << show_ticks_cm_3hex:ST0.HEX0
HEX0[2] << show_ticks_cm_3hex:ST0.HEX0
HEX0[3] << show_ticks_cm_3hex:ST0.HEX0
HEX0[4] << show_ticks_cm_3hex:ST0.HEX0
HEX0[5] << show_ticks_cm_3hex:ST0.HEX0
HEX0[6] << show_ticks_cm_3hex:ST0.HEX0
HEX0[7] << <VCC>
HEX1[0] << show_ticks_cm_3hex:ST0.HEX1
HEX1[1] << show_ticks_cm_3hex:ST0.HEX1
HEX1[2] << show_ticks_cm_3hex:ST0.HEX1
HEX1[3] << show_ticks_cm_3hex:ST0.HEX1
HEX1[4] << show_ticks_cm_3hex:ST0.HEX1
HEX1[5] << show_ticks_cm_3hex:ST0.HEX1
HEX1[6] << show_ticks_cm_3hex:ST0.HEX1
HEX1[7] << <VCC>
HEX2[0] << show_ticks_cm_3hex:ST0.HEX2
HEX2[1] << show_ticks_cm_3hex:ST0.HEX2
HEX2[2] << show_ticks_cm_3hex:ST0.HEX2
HEX2[3] << show_ticks_cm_3hex:ST0.HEX2
HEX2[4] << show_ticks_cm_3hex:ST0.HEX2
HEX2[5] << show_ticks_cm_3hex:ST0.HEX2
HEX2[6] << show_ticks_cm_3hex:ST0.HEX2
HEX2[7] << <VCC>


|main|trigger_generator:TG0
Clock => trig_out_q.CLK
Clock => led_out.CLK
Clock => counter_cycle[0].CLK
Clock => counter_cycle[1].CLK
Clock => counter_cycle[2].CLK
Clock => counter_cycle[3].CLK
Clock => counter_cycle[4].CLK
Clock => counter_cycle[5].CLK
Clock => counter_cycle[6].CLK
Clock => counter_cycle[7].CLK
Clock => counter_cycle[8].CLK
Clock => counter_cycle[9].CLK
Clock => counter_cycle[10].CLK
Clock => counter_cycle[11].CLK
Clock => counter_cycle[12].CLK
Clock => counter_cycle[13].CLK
Clock => counter_cycle[14].CLK
Clock => counter_cycle[15].CLK
Clock => counter_cycle[16].CLK
Clock => counter_cycle[17].CLK
Clock => counter_cycle[18].CLK
Clock => counter_cycle[19].CLK
Clock => counter_cycle[20].CLK
Clock => counter_cycle[21].CLK
Resetn => led_out.ACLR
Resetn => counter_cycle[0].ACLR
Resetn => counter_cycle[1].ACLR
Resetn => counter_cycle[2].ACLR
Resetn => counter_cycle[3].ACLR
Resetn => counter_cycle[4].ACLR
Resetn => counter_cycle[5].ACLR
Resetn => counter_cycle[6].ACLR
Resetn => counter_cycle[7].ACLR
Resetn => counter_cycle[8].ACLR
Resetn => counter_cycle[9].ACLR
Resetn => counter_cycle[10].ACLR
Resetn => counter_cycle[11].ACLR
Resetn => counter_cycle[12].ACLR
Resetn => counter_cycle[13].ACLR
Resetn => counter_cycle[14].ACLR
Resetn => counter_cycle[15].ACLR
Resetn => counter_cycle[16].ACLR
Resetn => counter_cycle[17].ACLR
Resetn => counter_cycle[18].ACLR
Resetn => counter_cycle[19].ACLR
Resetn => counter_cycle[20].ACLR
Resetn => counter_cycle[21].ACLR
cycle_out <= led_out.DB_MAX_OUTPUT_PORT_TYPE
trig_out <= trig_out_q.DB_MAX_OUTPUT_PORT_TYPE


|main|echo_ticks:ET0
clk => timeout~reg0.CLK
clk => valid~reg0.CLK
clk => width_ticks[0]~reg0.CLK
clk => width_ticks[1]~reg0.CLK
clk => width_ticks[2]~reg0.CLK
clk => width_ticks[3]~reg0.CLK
clk => width_ticks[4]~reg0.CLK
clk => width_ticks[5]~reg0.CLK
clk => width_ticks[6]~reg0.CLK
clk => width_ticks[7]~reg0.CLK
clk => width_ticks[8]~reg0.CLK
clk => width_ticks[9]~reg0.CLK
clk => width_ticks[10]~reg0.CLK
clk => width_ticks[11]~reg0.CLK
clk => width_ticks[12]~reg0.CLK
clk => width_ticks[13]~reg0.CLK
clk => width_ticks[14]~reg0.CLK
clk => width_ticks[15]~reg0.CLK
clk => width_ticks[16]~reg0.CLK
clk => width_ticks[17]~reg0.CLK
clk => width_ticks[18]~reg0.CLK
clk => width_ticks[19]~reg0.CLK
clk => width_ticks[20]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => counting.CLK
clk => echo_prev.CLK
clk => echo_sync.CLK
clk => echo_meta.CLK
rst_n => timeout~reg0.ACLR
rst_n => valid~reg0.ACLR
rst_n => width_ticks[0]~reg0.ACLR
rst_n => width_ticks[1]~reg0.ACLR
rst_n => width_ticks[2]~reg0.ACLR
rst_n => width_ticks[3]~reg0.ACLR
rst_n => width_ticks[4]~reg0.ACLR
rst_n => width_ticks[5]~reg0.ACLR
rst_n => width_ticks[6]~reg0.ACLR
rst_n => width_ticks[7]~reg0.ACLR
rst_n => width_ticks[8]~reg0.ACLR
rst_n => width_ticks[9]~reg0.ACLR
rst_n => width_ticks[10]~reg0.ACLR
rst_n => width_ticks[11]~reg0.ACLR
rst_n => width_ticks[12]~reg0.ACLR
rst_n => width_ticks[13]~reg0.ACLR
rst_n => width_ticks[14]~reg0.ACLR
rst_n => width_ticks[15]~reg0.ACLR
rst_n => width_ticks[16]~reg0.ACLR
rst_n => width_ticks[17]~reg0.ACLR
rst_n => width_ticks[18]~reg0.ACLR
rst_n => width_ticks[19]~reg0.ACLR
rst_n => width_ticks[20]~reg0.ACLR
rst_n => count[0].ACLR
rst_n => count[1].ACLR
rst_n => count[2].ACLR
rst_n => count[3].ACLR
rst_n => count[4].ACLR
rst_n => count[5].ACLR
rst_n => count[6].ACLR
rst_n => count[7].ACLR
rst_n => count[8].ACLR
rst_n => count[9].ACLR
rst_n => count[10].ACLR
rst_n => count[11].ACLR
rst_n => count[12].ACLR
rst_n => count[13].ACLR
rst_n => count[14].ACLR
rst_n => count[15].ACLR
rst_n => count[16].ACLR
rst_n => count[17].ACLR
rst_n => count[18].ACLR
rst_n => count[19].ACLR
rst_n => count[20].ACLR
rst_n => counting.ACLR
rst_n => echo_prev.ACLR
rst_n => echo_sync.ACLR
rst_n => echo_meta.ACLR
echo_in => echo_meta.DATAIN
width_ticks[0] <= width_ticks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[1] <= width_ticks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[2] <= width_ticks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[3] <= width_ticks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[4] <= width_ticks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[5] <= width_ticks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[6] <= width_ticks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[7] <= width_ticks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[8] <= width_ticks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[9] <= width_ticks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[10] <= width_ticks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[11] <= width_ticks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[12] <= width_ticks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[13] <= width_ticks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[14] <= width_ticks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[15] <= width_ticks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[16] <= width_ticks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[17] <= width_ticks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[18] <= width_ticks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[19] <= width_ticks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
width_ticks[20] <= width_ticks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid <= valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
timeout <= timeout~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy <= counting.DB_MAX_OUTPUT_PORT_TYPE


|main|show_ticks_cm_3hex:ST0
clk => HEX0[0]~reg0.CLK
clk => HEX0[1]~reg0.CLK
clk => HEX0[2]~reg0.CLK
clk => HEX0[3]~reg0.CLK
clk => HEX0[4]~reg0.CLK
clk => HEX0[5]~reg0.CLK
clk => HEX0[6]~reg0.CLK
clk => HEX1[0]~reg0.CLK
clk => HEX1[1]~reg0.CLK
clk => HEX1[2]~reg0.CLK
clk => HEX1[3]~reg0.CLK
clk => HEX1[4]~reg0.CLK
clk => HEX1[5]~reg0.CLK
clk => HEX1[6]~reg0.CLK
clk => HEX2[0]~reg0.CLK
clk => HEX2[1]~reg0.CLK
clk => HEX2[2]~reg0.CLK
clk => HEX2[3]~reg0.CLK
clk => HEX2[4]~reg0.CLK
clk => HEX2[5]~reg0.CLK
clk => HEX2[6]~reg0.CLK
clk => ticks_q[0].CLK
clk => ticks_q[1].CLK
clk => ticks_q[2].CLK
clk => ticks_q[3].CLK
clk => ticks_q[4].CLK
clk => ticks_q[5].CLK
clk => ticks_q[6].CLK
clk => ticks_q[7].CLK
clk => ticks_q[8].CLK
clk => ticks_q[9].CLK
clk => ticks_q[10].CLK
clk => ticks_q[11].CLK
clk => ticks_q[12].CLK
clk => ticks_q[13].CLK
clk => ticks_q[14].CLK
clk => ticks_q[15].CLK
clk => ticks_q[16].CLK
clk => ticks_q[17].CLK
clk => ticks_q[18].CLK
clk => ticks_q[19].CLK
clk => ticks_q[20].CLK
rst_n => HEX0[0]~reg0.PRESET
rst_n => HEX0[1]~reg0.PRESET
rst_n => HEX0[2]~reg0.PRESET
rst_n => HEX0[3]~reg0.PRESET
rst_n => HEX0[4]~reg0.PRESET
rst_n => HEX0[5]~reg0.PRESET
rst_n => HEX0[6]~reg0.PRESET
rst_n => HEX1[0]~reg0.PRESET
rst_n => HEX1[1]~reg0.PRESET
rst_n => HEX1[2]~reg0.PRESET
rst_n => HEX1[3]~reg0.PRESET
rst_n => HEX1[4]~reg0.PRESET
rst_n => HEX1[5]~reg0.PRESET
rst_n => HEX1[6]~reg0.PRESET
rst_n => HEX2[0]~reg0.PRESET
rst_n => HEX2[1]~reg0.PRESET
rst_n => HEX2[2]~reg0.PRESET
rst_n => HEX2[3]~reg0.PRESET
rst_n => HEX2[4]~reg0.PRESET
rst_n => HEX2[5]~reg0.PRESET
rst_n => HEX2[6]~reg0.PRESET
rst_n => ticks_q[0].ACLR
rst_n => ticks_q[1].ACLR
rst_n => ticks_q[2].ACLR
rst_n => ticks_q[3].ACLR
rst_n => ticks_q[4].ACLR
rst_n => ticks_q[5].ACLR
rst_n => ticks_q[6].ACLR
rst_n => ticks_q[7].ACLR
rst_n => ticks_q[8].ACLR
rst_n => ticks_q[9].ACLR
rst_n => ticks_q[10].ACLR
rst_n => ticks_q[11].ACLR
rst_n => ticks_q[12].ACLR
rst_n => ticks_q[13].ACLR
rst_n => ticks_q[14].ACLR
rst_n => ticks_q[15].ACLR
rst_n => ticks_q[16].ACLR
rst_n => ticks_q[17].ACLR
rst_n => ticks_q[18].ACLR
rst_n => ticks_q[19].ACLR
rst_n => ticks_q[20].ACLR
sample => ticks_q[20].ENA
sample => ticks_q[19].ENA
sample => ticks_q[18].ENA
sample => ticks_q[17].ENA
sample => ticks_q[16].ENA
sample => ticks_q[15].ENA
sample => ticks_q[14].ENA
sample => ticks_q[13].ENA
sample => ticks_q[12].ENA
sample => ticks_q[11].ENA
sample => ticks_q[10].ENA
sample => ticks_q[9].ENA
sample => ticks_q[8].ENA
sample => ticks_q[7].ENA
sample => ticks_q[6].ENA
sample => ticks_q[5].ENA
sample => ticks_q[4].ENA
sample => ticks_q[3].ENA
sample => ticks_q[2].ENA
sample => ticks_q[1].ENA
sample => ticks_q[0].ENA
ticks_20ns[0] => ticks_q[0].DATAIN
ticks_20ns[1] => ticks_q[1].DATAIN
ticks_20ns[2] => ticks_q[2].DATAIN
ticks_20ns[3] => ticks_q[3].DATAIN
ticks_20ns[4] => ticks_q[4].DATAIN
ticks_20ns[5] => ticks_q[5].DATAIN
ticks_20ns[6] => ticks_q[6].DATAIN
ticks_20ns[7] => ticks_q[7].DATAIN
ticks_20ns[8] => ticks_q[8].DATAIN
ticks_20ns[9] => ticks_q[9].DATAIN
ticks_20ns[10] => ticks_q[10].DATAIN
ticks_20ns[11] => ticks_q[11].DATAIN
ticks_20ns[12] => ticks_q[12].DATAIN
ticks_20ns[13] => ticks_q[13].DATAIN
ticks_20ns[14] => ticks_q[14].DATAIN
ticks_20ns[15] => ticks_q[15].DATAIN
ticks_20ns[16] => ticks_q[16].DATAIN
ticks_20ns[17] => ticks_q[17].DATAIN
ticks_20ns[18] => ticks_q[18].DATAIN
ticks_20ns[19] => ticks_q[19].DATAIN
ticks_20ns[20] => ticks_q[20].DATAIN
HEX2[0] <= HEX2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= HEX1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= HEX0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= HEX0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= HEX0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= HEX0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= HEX0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= HEX0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= HEX0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|show_ticks_cm_3hex:ST0|bin_to_bcd3:u_b2b
bin[0] => o[0].DATAIN
bin[1] => LessThan11.IN8
bin[1] => Add11.IN8
bin[1] => shift.DATAA
bin[2] => LessThan8.IN8
bin[2] => Add8.IN8
bin[2] => shift.DATAA
bin[3] => LessThan6.IN8
bin[3] => Add6.IN8
bin[3] => shift.DATAA
bin[4] => LessThan4.IN8
bin[4] => Add4.IN8
bin[4] => shift.DATAA
bin[5] => LessThan2.IN8
bin[5] => Add2.IN8
bin[5] => shift.DATAA
bin[6] => LessThan1.IN8
bin[6] => Add1.IN8
bin[6] => shift.DATAA
bin[7] => LessThan0.IN6
bin[7] => Add0.IN6
bin[7] => shift.DATAA
bin[8] => LessThan0.IN5
bin[8] => Add0.IN5
bin[8] => shift.DATAA
bin[9] => LessThan0.IN4
bin[9] => Add0.IN4
bin[9] => shift.DATAA
h[0] <= shift.DB_MAX_OUTPUT_PORT_TYPE
h[1] <= shift.DB_MAX_OUTPUT_PORT_TYPE
h[2] <= shift.DB_MAX_OUTPUT_PORT_TYPE
h[3] <= shift.DB_MAX_OUTPUT_PORT_TYPE
t[0] <= shift.DB_MAX_OUTPUT_PORT_TYPE
t[1] <= shift.DB_MAX_OUTPUT_PORT_TYPE
t[2] <= shift.DB_MAX_OUTPUT_PORT_TYPE
t[3] <= shift.DB_MAX_OUTPUT_PORT_TYPE
o[0] <= bin[0].DB_MAX_OUTPUT_PORT_TYPE
o[1] <= shift.DB_MAX_OUTPUT_PORT_TYPE
o[2] <= shift.DB_MAX_OUTPUT_PORT_TYPE
o[3] <= shift.DB_MAX_OUTPUT_PORT_TYPE


